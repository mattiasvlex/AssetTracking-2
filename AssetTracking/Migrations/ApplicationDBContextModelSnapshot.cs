// <auto-generated />
using System;
using AssetTracking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTracking.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetTracking.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeLocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeLocation");

                    b.ToTable("Assets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "ASUS ROG",
                            Date = new DateOnly(2020, 11, 24),
                            Model = "B550-F",
                            OfficeLocation = "Sweden",
                            Price = 950,
                            Type = "Computer"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "HP",
                            Date = new DateOnly(2023, 1, 30),
                            Model = "14S-FQ1010NO",
                            OfficeLocation = "Denmark",
                            Price = 679,
                            Type = "Computer"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Samsung",
                            Date = new DateOnly(2022, 9, 12),
                            Model = "S20 Plus",
                            OfficeLocation = "USA",
                            Price = 700,
                            Type = "Phone"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Sony Xperia",
                            Date = new DateOnly(2021, 3, 6),
                            Model = "10 III",
                            OfficeLocation = "Sweden",
                            Price = 800,
                            Type = "Phone"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Iphone",
                            Date = new DateOnly(2018, 11, 25),
                            Model = "10",
                            OfficeLocation = "Denmark",
                            Price = 750,
                            Type = "Phone"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "HP",
                            Date = new DateOnly(2023, 8, 30),
                            Model = "Elitebook",
                            OfficeLocation = "USA",
                            Price = 1530,
                            Type = "Computer"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "HP",
                            Date = new DateOnly(2021, 7, 6),
                            Model = "Elitebook",
                            OfficeLocation = "Sweden",
                            Price = 1640,
                            Type = "Computer"
                        });
                });

            modelBuilder.Entity("AssetTracking.Office", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ToUSD")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Location");

                    b.ToTable("Offices", (string)null);

                    b.HasData(
                        new
                        {
                            Location = "Sweden",
                            Currency = "SEK",
                            ToUSD = 10.68m
                        },
                        new
                        {
                            Location = "Denmark",
                            Currency = "DKK",
                            ToUSD = 6.88m
                        },
                        new
                        {
                            Location = "USA",
                            Currency = "USD",
                            ToUSD = 1.0m
                        });
                });

            modelBuilder.Entity("AssetTracking.Asset", b =>
                {
                    b.HasOne("AssetTracking.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeLocation");

                    b.Navigation("Office");
                });
#pragma warning restore 612, 618
        }
    }
}
